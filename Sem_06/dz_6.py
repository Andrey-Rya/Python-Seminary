# 1. Наибольший общий делитель
# В модуле math есть функция math.gcd(a, b), возвращающая наибольший общий делитель (НОД) двух чисел.
# Вычислите и напечатайте наибольший общий делитель для списка натуральных чисел. Ввод чисел
# продолжается до ввода пустой строки.
# Входные данные
# 36
# 12
# 144
# 18
#
# Выходные данные
# 6

# lst = list(map(int, input("Введите последовательность чисел через пробел:\n").split()))
# print(f"Вы ввели эту последовательность чисел: {lst}")
#
# try:
#     from math import gcd
# except ImportError:
#     from fractions import gcd
# from functools import reduce
# print(f'Выходные данные = {reduce(gcd, lst)}')

# 2. Дана строка текста, состоящая из букв русского алфавита "О" и "Р". Буква "О" – соответствует выпадению
# Орла, а буква "Р" – соответствует выпадению Решки. Напишите программу, которая подсчитывает наибольшее
# количество подряд выпавших Решек.
#
# Формат входных данных:
# На вход программе подается строка текста, состоящая из букв русского алфавита "О" и "Р".
#
# Формат выходных данных:
# Программа должна вывести наибольшее количество подряд выпавших Решек.
#
# Примечание. Если выпавших Решек нет, то необходимо вывести число 0.

# stroka = input('Введите строку из букв русского алфавита "О" и "Р": ').split('О')
# res = max(stroka, key=len)
# print(f'Наибольшее количество выпавших подряд Решек = {len(res)}')

# 3. Задача Измените код одной-двух решенных ранее задач (с прошлых семинаров или домашних работ),
# применив лямбды, filter, map, zip, enumerate, списочные выражения.



# # 3.1 Выполняем сложение чисел из двух заданных списков 
#
# list_1 = [23, 13, 15, 43, 29, 67, 53]
# list_2 = [61, 26, 88, 55, 73, 94, 61]
#
# def sum(x, y):
#     return x+y
#
# list_sum = list(map(sum, list_1, list_2))
# print(f'Выполняем сложение первым способом {list_sum}')
#
# list_sum_lambda = list(map(lambda x, y: x+y, list_1, list_2)) # используем lambda
# print(f'Выполняем сложение вторым способом {list_sum_lambda}')

# # 3.2 Дана последовательность чисел. Нужно получить список уникальных элементов заданной последовательности.

# import generation as lg
# numbers_list = lg.list_generation()
# result_list = list(filter(lambda a: numbers_list.count(a) == 1, numbers_list))
# print(f'Для сгенерированной последовательности {numbers_list}, \n   список уникальных элементов составляет: {result_list}')

# # 3.3 Напишите программу, которая на вход принимает натуральные числа и находит максимальное из них.
#
# from functools import reduce
#
# list = [int(i) for i in input('Введите 5 чисел через пробел: ').split()]
# print(list)
# res = reduce(lambda a, b: a if (a > b) else b, list)
# print('Максимальное число из тех, что вы ввели: ', res)

